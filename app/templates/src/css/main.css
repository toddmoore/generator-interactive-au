@charset "UTF-8";
/**
 * `animation` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/animation animation on MDN
 * 
 * @group css3
 */
/**
 * `animation-delay` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay animation-delay on MDN
 * 
 * @group css3
 */
/**
 * `background-size` prefixer.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/background-size background-size on MDN
 * 
 * @group css3
 */
/**
 * `border-radius` prefixer.
 *
 * @param {Number} $radius (5px)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius border-radius on MDN
 * 
 * @group css3
 */
/**
 * `box-shadow` prefixer.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow box-shadow on MDN
 * 
 * @group css3
 */
/**
 * `box-sizing` prefixer.
 *
 * @param {String} $box
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing box-sizing on MDN
 * 
 * @group css3
 */
/**
 * `column-width` prefixer. Uses `rem` if defined.
 *
 * @param {String} $box
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/column-width column-width on MDN
 * 
 * @group css3
 */
/**
 * `flex` prefixer.
 *
 * @param {Number}          $flex-grow   (0)
 * @param {Number}          $flex-shring (1)
 * @param {Number | String} $flex-basis  (auto)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex flex on MDN
 * 
 * @group css3
 */
/**
 * `flex-direction` prefixer.
 *
 * @param {String} $direction row | row-reverse | column | column-reverse
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction flex-direction on MDN
 * 
 * @group css3
 */
/**
 * `flex-basis` prefixer.
 *
 * @param {Number | String} $value (auto)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis flex-basis on MDN
 * 
 * @group css3
 */
/**
 * `display: flex` prefixer.
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex flex on MDN
 * 
 * @group css3
 */
/**
 * `flex-grow` prefixer.
 *
 * @param {Number} $value (0)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow flex-grow on MDN
 * 
 * @group css3
 */
/**
 * `@keyframes` prefixer.
 *
 * @param {String} $name
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes @keyframes on MDN
 * 
 * @group css3
 */
/**
 * `transform: rotate()` prefixer.
 *
 * @param {Number} $angle
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform#rotate transform: rotate() on MDN
 * 
 * @group css3
 */
/**
 * `position: sticky` prefixer.
 * Support is very limited but should be used in iOS.
 * Note that Blink temporarily dropped support until they get their
 * "scrolling and compositing house in order"
 *
 * @link http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit position: sticky on WebKit
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/position#Sticky_positioning position: sticky on MDN
 * @link https://code.google.com/p/chromium/issues/detail?id=231752 Meta bug for position: sticky on Chromium's tracker
 * 
 * @group css3
 */
/**
 * `transform` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform transform on MDN
 * 
 * @group css3
 */
/**
 * `transform-origin` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin transform-origin on MDN
 * 
 * @group css3
 */
/**
 * `transition` prefixer.
 * Do not use when transitionning prefixed properties
 * to avoid impossible code like `-moz-transition: -webkit-border-radius 1s`.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transition transition on MDN
 * 
 * @group css3
 */
/**
 * Default rem baseline.
 * 
 * @type Number
 */
/**
 * Transform a value into rem.
 *
 * @param {Number} $value
 * @param {Number} $baseline ($guss-rem-baseline)
 *
 * @requires {variable} guss-rem-baseline
 *
 * @return {List | Number}
 */
/**
 * Output `rem` units with `px` fallback.
 *
 * @link http://sassmeister.com/gist/7451284 Usage
 * 
 * @param {Map} $properties
 *
 * @requires {function} rem
 */
/**
 * Gutter width.
 *
 * @type Number
 *
 * @group grid-system
 */
/**
 * Baseline size.
 *
 * @type Number
 *
 * @group grid-system
 */
/**
 * Column width.
 *
 * @type Number
 *
 * @group grid-system
 */
/**
 * Row height.
 *
 * @type Number
 *
 * @group grid-system
 */
/**
 * Number of columns.
 *
 * @type Number
 *
 * @group grid-system
 */
/**
 * Grid span.
 * Compute the width of a given number of grid columns.
 *
 * @example
 * .element {
 *   width: gs-span(3);
 * }
 *
 * @param {Number} $n-columns
 *
 * @requires {variable} gs-column-width
 * @requires {variable} gs-gutter
 *
 * @return {Number}
 *
 * @group grid-system
 */
/**
 * Grid height.
 * Compute the height of a given number of vertical grid units.
 *
 * @example
 * .element {
 *   padding-top: gs-height(2);
 * }
 *
 * @param {Number} $n-rows
 *
 * @requires {variable} gs-row-height
 * @requires {variable} gs-baseline
 *
 * @return {Number}
 *
 * @group grid-system
 */
/**
 * Grid container.
 * Snaps to `$gs-max-columns` columns at the wide breakpoint.
 *
 * @requires {mixin} mq
 * @requires {function} gs-span
 * @requires {variable} gs-gutter
 * @requires {variable} gs-max-columns
 *
 * @group grid-system
 */
/**
 * Grid columns helper classes, useful for quick prototyping.
 *
 * @example markup
 * <div class="gs-span-3"></div>
 *
 * @requires {variable} gs-max-columns
 * @requires {function} gs-span
 *
 * @group grid-system
 */
/**
 * Grid system.
 *
 * @requires {mixin} gs-container
 *
 * @group grid-system
 */
/* ==========================================================================
   Guss: row
   ========================================================================== */
/**
 * Row utility class.
 *
 * @type String
 *
 * @group layout
 */
/**
 * When set to false, output a simpler version with a static width.
 *
 * @link http://caniuse.com/#feat=flexbox Flexbox support table
 *
 * @type Bool
 *
 * @group layout
 */
/**
 * Classes to manage feature-detection support for flex. Override if your
 * detection uses a different convention.
 *
 * @link http://modernizr.com/docs/#flexbox Modernizr detection for flex
 *
 * @type String
 *
 * @group layout
 */
/**
 * Static width for older browsers.
 *
 * @type Number
 *
 * @group layout
 */
/**
 * A row is an ensemble of 2, 3 or 4 items that are originally stacked
 * vertically on mobile and flow horizontally on higher breakpoints.
 *
 * @param {String} $base-class
 *
 * @requires {variable} browser-supports-flexbox
 * @requires {variable} guss-row-fallback-width
 * @requires {mixin} mq
 * @requires {mixin} flex-grow
 * @requires {mixin} flex-basis
 *
 * @link http://sassmeister.com/gist/9b6033675b0f01de21f0 Examples on Sassmeister
 *
 * @example scss
 *  // Sass Mixin
 *  @include guss-row('.classname');
 *
 * @example scss
 *  // Utility class set as `$guss-row-utility-class`
 *  @include guss-row-utility;
 *
 * @example markup
 * <div class="l-row l-row--items-<number of items contained>">
 *     <div class="l-row__item [l-row__item--boost-2]"></div>
 *     <div class="l-row__item"></div>
 *     <div class="l-row__item"></div>
 *     <div class="l-row__item [l-row__item--boost-1]"></div>
 * </div>
 * <!-- --boost-n modifiers are used to add visual importance to an item.
 * Note that this applies only to browsers that support flexbox. -->
 *
 * @group layout
 */
/**
 * Rows for flex browsers.
 *
 * @requires {variable} base-class
 *
 * @group layout
 */
/**
 * Rows for non-flex browsers.
 *
 * @requires {variable} base-class
 * @requires {variable} guss-row-fallback-width
 *
 * @group layout
 */
/**
 * Row utility.
 *
 * @requires {variable} guss-row-utility-class
 * @requires {mixin} guss-row
 *
 * @group layout
 */
/* ==========================================================================
   Guss: columns
   ========================================================================== */
/**
 * Minimum column width.
 * 
 * @type Number
 *
 * @group layout
 */
/**
 * Column gutter.
 * 
 * @type Number
 *
 * @group layout
 */
/**
 * Column utility class.
 * 
 * @type String
 *
 * @group layout
 */
/**
 * When set to false, output a simpler version with a static width.
 *
 * @link http://caniuse.com/#feat=multicolumn Column support table
 * 
 * @type Bool
 *
 * @group layout
 */
/**
 * Fallback width when CSS3 columns support is disabled.
 * 
 * @type Number
 *
 * @group layout
 */
/**
 * Number of columns in the non-responsive version.
 * 
 * @type Number
 *
 * @group layout
 */
/**
 * Width of fallback column item.
 *
 * @param {Number} $container-width
 * @param {Number} $gap-between-columns
 * @param {Number} $number-of-columns
 *
 * @return {Number}
 *
 * @group layout
 */
/**
 * A "columns pattern" fits as many "$guss-column-min-width"-wide columns
 * in any type of context: full-width container, sidebarâ€¦
 *
 * @param {String} $base-class
 * @param {Number} $column-min-width         ($guss-column-min-width)
 * @param {Number} $column-gap               ($guss-column-gap)
 * @param {Number} $columns-fallback-width   ($guss-columns-fallback-width)
 * @param {Number} $columns-fallback-columns ($guss-columns-fallback-columns)
 * @param {Bool}   $css3-columns-support     ($browser-supports-columns)
 *
 * @requires {variable} guss-column-min-width
 * @requires {variable} guss-column-gap
 * @requires {variable} guss-columns-fallback-width
 * @requires {variable} guss-columns-fallback-columns
 * @requires {variable} browser-supports-columns
 * @requires {function} width-of-fallback-column-item
 * @requires {function} rem
 * @requires {mixin} mq
 *
 * @link http://sassmeister.com/gist/5c09ed0242085ba8d705 Examples on Sassmeister
 * 
 * @example
 *  // Usage 1: Sass mixin
 *  @include guss-columns('.classname');
 *
 *  // Usage 2: utility class set as `$guss-columns-utility-class`
 *  @include guss-columns-utility;
 *
 * @example markup
 * <div class="l-columns">
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 *     <div class="l-columns__item"></div>
 * </div>
 *
 * @group layout
 */
/**
 * Column utility.
 *
 * @requires {mixin} guss-columns
 * @requires {variable} guss-columns-utility-class
 *
 * @group layout
 */
/**
 * Data font stack
 *
 * @group typography
 */
/**
 * Serif font stack
 *
 * @group typography
 */
/**
 * Headline font stack
 *
 * @group typography
 */
/**
 * Sans serif text font stack
 *
 * @group typography
 */
/**
 * Sans serif headline font stack
 *
 * @group typography
 */
/**
 * Default font scale settings
 * See font-scale.html and font-scale.png for visual representations
 *
 * @group typography
 */
/**
 * Grab all levels of a font the font-scale
 *
 * @param {String} $name - Name of the font-scale matrix (eg: headline)
 * @param {Map} $font-scale ($font-scale)
 *
 * @example
 *  font-size: get-scale(header);
 *
 * @requires {variable} $font-scale
 *
 * @return {Map}
 *
 * @group typography
 */
/**
 * Grab info for a particular level of a font-scale
 *
 * @param {String} $name - Name of the font-scale in the matrix (eg: headline)
 * @param {Number} $level - Level in the matrix
 * @param {Map} $font-scale ($font-scale)
 *
 * @example
 *  font-size: get-scale-level(header, 1);
 *
 * @requires {variable} $font-scale
 * @requires {function} get-scale
 *
 * @return {Map}
 *
 * @group typography
 */
/**
 * Get a font-size for a level in the font-scale matrix
 *
 * @param {String} $name - Name of the font-scale in the matrix (eg: headline)
 * @param {Number} $level - Level in the matrix
 * @param {Map} $font-scale - Configuration
 *
 * @example
 *  font-size: get-font-size(header, 3);
 *
 * @requires {variable} $font-scale
 * @requires {function} convert-to-px
 * @requires {function} get-scale-level
 *
 * @return {Number}
 *
 * @group typography
 */
/**
 * Get a line-height for a level in the font-scale matrix
 *
 * @param {String} $name - Name of the font-scale in the matrix (eg: headline)
 * @param {Number} $level - Level in the matrix
 * @param {Map} $font-scale - Configuration
 *
 * @example
 *  font-size: get-line-height(header, 3);
 *
 * @requires {variable} $font-scale
 * @requires {function} convert-to-px
 * @requires {function} get-scale-level
 *
 * @return {Number}
 *
 * @group typography
 */
/**
 * Turn any value into pixels
 *
 * @param {Number} $value
 *
 * @example
 *  font-size: convert-to-px(14); // 14px
 *
 * @return {Number}
 *
 * @group typography
 */
/**
 * Default typography settings, to be included as soon as possible in the HTML
 * 1. Make type rendering look crisper
 * 2. Set relative line spacing to 1.5 (16px * 1.5 = 24px)
 *
 * @param {String} $font-family ($f-serif-text) - Default global font
 *
 * @requires {variable} $f-serif-text
 *
 * @group typography
 */
/**
 * Font-size and line-height shorthand
 *
 * @param {Number} $size
 * @param {Number} $line-height ($size)
 *
 * @example
 *  @include font-size(18, 24);
 *
 * @requires {function} convert-to-px
 *
 * @group typography
 */
/**
 * Font styling shorthand  
 * Note: prefer the usage of the font-scale mixins to stick to the font scale
 *
 * @param {String} $family
 * @param {String} $weight
 * @param {Number} $size
 * @param {Number} $line-height ($size)
 *
 * @example
 *  @include font(arial, bold, 18, 24);
 *
 * @requires {mixin} font-size
 *
 * @group typography
 */
/**
 * Header family and weight properties.
 *
 * @requires {variable} $f-serif-headline
 *
 * @group typography
 */
/**
 * Header typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family, weight)
 *  @include fs-header(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-header(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-header
 *
 * @group typography
 */
/**
 * Healdine family and weight properties.
 *
 * @requires {variable} $f-serif-headline
 *
 * @group typography
 */
/**
 * Headline typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family, weight)
 *  @include fs-headline(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-headline(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-headline
 *
 * @group typography
 */
/**
 * Body Heading family and weight properties.
 *
 * @requires {variable} $f-serif-text
 *
 * @group typography
 */
/**
 * Body Heading typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family, weight)
 *  @include fs-bodyHeading(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-bodyHeading(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-bodyHeading
 *
 * @group typography
 */
/**
 * Body Copy family property.
 *
 * @requires {variable} $f-serif-text
 *
 * @group typography
 */
/**
 * Body Copy typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family)
 *  @include fs-bodyCopy(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-bodyCopy(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-bodyCopy
 *
 * @group typography
 */
/**
 * Data family property.
 *
 * @requires {variable} $f-data
 *
 * @group typography
 */
/**
 * Data typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family)
 *  @include fs-data(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-data(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-data
 *
 * @group typography
 */
/**
 * Text Sans family property.
 *
 * @requires {variable} $f-sans-serif-text
 *
 * @group typography
 */
/**
 * Text Sans typography settings.
 *
 * @param {Number} $level
 * @param {Boolean} $size-only
 *
 * @example
 *  // Output all properties (font-size, line-height, family)
 *  @include fs-textSans(3);
 *  
 *  // Output font-size and line-height only
 *  @include fs-textSans(3, $size-only: true);
 *
 * @requires {function} get-font-size
 * @requires {function} get-line-height
 * @requires {mixin} font-size
 * @requires {mixin} f-textSans
 *
 * @group typography
 */
/**
 * Headline Sans family property.  
 * Is not currently integrated into our font scale matrix,
 * hence no `fs-` mixin; currently we're just using it as a
 * replacement font in a few places.
 *
 * @requires {variable} $f-sans-serif-headline
 *
 * @group typography
 */
/**
 * An example of a colour palette to be used with guss-colours
 *
 * If you're looking for the guardian colour palette: https://github.com/guardian/pasteup-palette
 * 
 * @type Map
 *
 * @group colours
 */
/**
 * Get a colour from a given colour palette.
 * 
 * @param {String} $name                    - colour to get
 * @param {Map}    $palette ($guss-colours) - palette
 *
 * @requires {variable} guss-colours
 *
 * @return {Color | Null}
 *
 * @group colours
 */
/**
 * Generate helper classes for a given colour palette  
 * Outputs rules such as: `.c-red { color: red; }`.
 *
 * @param {Map}    $palette  ($guss-colours) - palette
 * @param {String} $prefix   ("c-")          - prefix
 * @param {String} $property ("color")       - property
 *
 * @requires {variable} guss-colours
 *
 * @group colours
 */
/**
 * Charset
 *
 * - ascii: 256 characters only, very small
 * - latin1: latin 1 character set
 * - original: full character set
 *
 * @type String
 *
 * @group webfonts
 */
/**
 * Hinting
 *
 * - on: larger file, better rendering in Windows
 * - off: smaller files, render well on HiDPI displays
 *
 *  @type String
 *
 * @group webfonts
 */
/**
 * Kerning
 *
 * - on: larger file, better rendering
 * - off: smaller files
 *
 *  @type String
 *
 * @group webfonts
 */
/**
 * Base URL
 * URL can be an absolute HTTP (`//pasteup.guim.co.uk/fonts/`) or relative (`../`)
 *
 * @type String
 *
 * @group webfonts
 */
/**
 * Complete path
 *
 * @requires {variable} guss-webfonts-charset
 * @requires {variable} guss-webfonts-hinting
 * @requires {variable} guss-webfonts-kerning
 *
 * @type String
 *
 * @group webfonts
 */
/**
 * Human-readable Font-weights
 *
 * @type Map
 *
 * @group webfonts
 */
/* Extra fonts
   ========================================================================== */
/**
 * Extra fonts directory
 *
 * @type String
 *
 * @group webfonts
 */
/**
 * Extra fonts list
 *
 * @type List
 *
 * @group webfonts
 */
/* Font registry
   ========================================================================== */
/**
 * Font registry
 *
 * @type Map
 *
 * @group webfonts
 */
/**
 * Machine-readable CSS font-weight.
 *
 * @param {String} $keyword - Human-readable keyword in $guss-font-weights
 *
 * @requires {variable} guss-font-weights
 *
 * @example scss
 * font-weight: guss-font-weight(light);
 *
 * @return {Number} - CSS font-weight
 *
 * @group webfonts
 */
/**
 * Is this font stored in `$guss-extras-directory`?
 *
 * @param {String} $font-family - Font to look for
 *
 * @requires {variable} guss-webfonts-extras
 *
 * @return {Bool}
 *
 * @group webfonts
 */
/**
 * Replace `$search` by `$replace` in `$string`.
 *
 * @author Hugo Giraudel
 *
 * @param {String} $string - string to update
 * @param {String} $search - value to replace
 * @param {String} $replace ('') - new value
 *
 * @return {String}
 *
 * @group webfonts
 */
/**
 * Remove white space in $string
 *
 * @requires {function} str-replace
 *
 * @param {String} $string - string to update
 *
 * @return {String}
 *
 * @group webfonts
 */
/**
 * Capitalise first letter of $string
 *
 * @param {String} $string - string to update
 *
 * @return {String}
 *
 * @group webfonts
 */
/**
 * Compose webfont filename
 *
 * @param {String} $font-family - font family
 * @param {String} $weight - weight, member of $guss-font-weights
 * @param {String} $style - normal | italic
 *
 * @requires {function} str-capitalise
 * @requires {function} str-remove-white-space
 *
 * @example scss
 * src: url('compose-webfont-filename(Guardian Text Sans Web, bold, italic).woff');
 * -> src: url("GuardianTextSansWeb-BoldItalic.eot");
 *
 * @return {String}
 *
 * @group webfonts
 */
/**
 * Compose webfont path
 * "My Font" is in the MyFont/ directory
 * "Extra" fonts are stored in `$guss-extras-directory`.
 *
 * @param {String} $font-family - font name
 *
 * @requires {variable} guss-extras-directory
 * @requires {variable} guss-webfonts-path
 * @requires {function} str-remove-white-space
 *
 * @return {String} - Path to the font
 *
 * @group webfonts
 */
/**
 * Look for `$needle` in `$haystack`.
 *
 * @param {List}   $haystack - List to search in
 * @param {String} $needle - The string to look for
 *
 * @return {Bool}
 *
 * @group webfonts
 */
/**
 * Output a @font-face declaration at root level.
 *
 * @param {String} $family - List to search in
 * @param {String} $file - The filename
 * @param {String} $base-path - Directory where the font is stored
 * @param {Number} $weight (400) - CSS font-weight
 * @param {String} $style (normal) - CSS font-style
 * @param {String} $url ($guss-webfonts-base-url) - URL
 *
 * @requires {variable} guss-webfonts-base-url
 *
 * @group webfonts
 */
/**
 * Output the @font-face declaration for a Guss webfont.
 *
 * @param {Number} $font-family - ID of the font in $guss-webfonts
 * @param {Map} $properties - weight (member of `$guss-font-weights`), style (`normal` | `italic`)
 * @param {Map} $overrides - weight (member of `$guss-font-weights`), style (`normal` | `italic`)
 *
 * @requires {variable} guss-webfonts
 * @requires {function} compose-webfont-filename
 * @requires {function} compose-webfont-path
 * @requires {function} guss-font-weight
 * @requires {mixin} guss-at-font-face
 *
 * @group webfonts
 */
/**
 * Output the @font-face declaration for Guss webfonts.
 *
 * @param {String|List|Map} $fonts ($guss-webfonts) - Fonts to output
 * @param {Map} $registry ($guss-webfonts) - Font registry
 *
 * @requires {variable} guss-webfonts
 * @requires {mixin} guss-webfonts-single-declaration
 * @requires {mixin} guss-webfonts
 *
 * @group webfonts
 */
@at-root {
  @font-face {
    font-family: 'Guardian Agate Sans 1 Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Regular.svg#GuardianAgateSans1Web-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Agate Sans 1 Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-RegularItalic.svg#GuardianAgateSans1Web-RegularItalic') format('svg');
    font-weight: 400;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Agate Sans 1 Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-Bold.svg#GuardianAgateSans1Web-Bold') format('svg');
    font-weight: 700;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Agate Sans 1 Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianAgateSans1Web/GuardianAgateSans1Web-BoldItalic.svg#GuardianAgateSans1Web-BoldItalic') format('svg');
    font-weight: 700;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Light.svg#GuardianEgyptianWeb-Light') format('svg');
    font-weight: 200;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Regular.svg#GuardianEgyptianWeb-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-RegularItalic.svg#GuardianEgyptianWeb-RegularItalic') format('svg');
    font-weight: 400;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Semibold.svg#GuardianEgyptianWeb-Semibold') format('svg');
    font-weight: 600;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-SemiboldItalic.svg#GuardianEgyptianWeb-SemiboldItalic') format('svg');
    font-weight: 600;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Medium.svg#GuardianEgyptianWeb-Medium') format('svg');
    font-weight: 500;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-Bold.svg#GuardianEgyptianWeb-Bold') format('svg');
    font-weight: 700;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianEgyptianWeb/GuardianEgyptianWeb-BoldItalic.svg#GuardianEgyptianWeb-BoldItalic') format('svg');
    font-weight: 700;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Light.svg#GuardianSansWeb-Light') format('svg');
    font-weight: 200;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Regular.svg#GuardianSansWeb-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianSansWeb/GuardianSansWeb-Semibold.svg#GuardianSansWeb-Semibold') format('svg');
    font-weight: 600;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Regular.svg#GuardianTextEgyptianWeb-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-RegularItalic.svg#GuardianTextEgyptianWeb-RegularItalic') format('svg');
    font-weight: 400;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Medium.svg#GuardianTextEgyptianWeb-Medium') format('svg');
    font-weight: 500;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-MediumItalic.svg#GuardianTextEgyptianWeb-MediumItalic') format('svg');
    font-weight: 500;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Bold.svg#GuardianTextEgyptianWeb-Bold') format('svg');
    font-weight: 700;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BoldItalic.svg#GuardianTextEgyptianWeb-BoldItalic') format('svg');
    font-weight: 700;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-Black.svg#GuardianTextEgyptianWeb-Black') format('svg');
    font-weight: 800;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Egyptian Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextEgyptianWeb/GuardianTextEgyptianWeb-BlackItalic.svg#GuardianTextEgyptianWeb-BlackItalic') format('svg');
    font-weight: 800;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Regular.svg#GuardianTextSansWeb-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-RegularItalic.svg#GuardianTextSansWeb-RegularItalic') format('svg');
    font-weight: 400;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Medium.svg#GuardianTextSansWeb-Medium') format('svg');
    font-weight: 500;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-MediumItalic.svg#GuardianTextSansWeb-MediumItalic') format('svg');
    font-weight: 500;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Bold.svg#GuardianTextSansWeb-Bold') format('svg');
    font-weight: 700;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BoldItalic.svg#GuardianTextSansWeb-BoldItalic') format('svg');
    font-weight: 700;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-Black.svg#GuardianTextSansWeb-Black') format('svg');
    font-weight: 800;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Text Sans Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianTextSansWeb/GuardianTextSansWeb-BlackItalic.svg#GuardianTextSansWeb-BlackItalic') format('svg');
    font-weight: 800;
    font-style: italic;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Compact Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianCompactWeb-Black.svg#GuardianCompactWeb-Black') format('svg');
    font-weight: 800;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Titlepiece Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianTitlepieceWeb-Regular.svg#GuardianTitlepieceWeb-Regular') format('svg');
    font-weight: 400;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  @font-face {
    font-family: 'Guardian Weekend Cond Web';
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.eot');
    src: url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.eot?#iefix') format('embedded-opentype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.woff2') format('woff2'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.woff') format('woff'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.ttf') format('truetype'), url('./webfonts/hinting-on_kerning-on/original/GuardianExtrasWeb/GuardianWeekendCondWeb-Black.svg#GuardianWeekendCondWeb-Black') format('svg');
    font-weight: 800;
    font-style: normal;
    font-stretch: normal; }
 }

@at-root {
  html {
    font-family: 'Guardian Text Egyptian Web', Georgia, serif;
    -moz-osx-font-smoothing: grayscale;
    /* 1 */
    -webkit-font-smoothing: antialiased;
    /* 1 */ }

  body {
    line-height: 1.5;
    /* 2 */ } }
